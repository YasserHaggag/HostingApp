version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.0
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
  browser-tools: circleci/browser-tools@1.3.0
jobs:
  build:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - restore_cache:
          keys:
            - frontend-dependencies{{ checksum "udagram/udagram-frontend/package.json" }}
            - frontend-dependencies
      - run:
         name: Install front-end dependencies
         command: |
            npm run frontend:install
      - save_cache:
          paths:
            - udagram-frontend/node_modules
          key: frontend-dependencies
      - restore_cache:
          keys:
            - backend-dependencies{{ checksum "udagram/udagram-api/package.json" }}
            - backend-dependencies
      - run:
          name: Install back-end dependencies
          command: |
            npm run api:install
      - save_cache:
          paths:
            - udagram-api/node_modules
          key: backend-dependencies
      - run:
         name: Build front-end
         command: |
            npm run frontend:build
      - persist_to_workspace:
          root: udagram/udagram-frontend
          paths:
            - www
      - run:
          name: Build back-end
          command: |
            npm run api:build
      - persist_to_workspace:
          root: udagram/udagram-api
          paths:
            - www
  test:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - restore_cache:
          keys:
            - frontend-dependencies{{ checksum "udagram/udagram-frontend/package.json" }}
            - frontend-dependencies
    ##  - run:
      ##    name: Test front-end
        ##  command: |
          ##  npm run frontend:test
  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - aws-cli/setup
      - aws-elastic-beanstalk/setup
      - restore_cache:
          keys:
            - frontend-dependencies{{ checksum "udagram/udagram-frontend/package.json" }}
            - frontend-dependencies

      - run:
          name: configure eb
          command: |
            cd udagram-api
            eb init udagram-api --platform node.js --region us-east-1
            eb use udagram-api-env
            eb setenv  POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_DB=$POSTGRES_DB PORT=$_port  POSTGRES_HOST=$POSTGRES_HOST AWS_BUCKET=$AWS_BUCKET URL=$URL JWT_SECRET=$JWT_SECRET AWS_REGION=$AWS_DEFAULT_REGION AWS_PROFILE=$AWS_PROFILE  PORT=$PORT AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - attach_workspace:
          at: udagram/udagram-api
      - run:
          name: Deploy backend
          command: |
            npm run api:deploy
      - attach_workspace:
          at: udagram/udagram-frontend
      - run:
          name: Deploy frontend
          command: |
            npm run frontend:deploy
workflows:
  version: 2
  udagram:
    jobs:
      - build:
          filters:
            branches:
              only:
               - master
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master